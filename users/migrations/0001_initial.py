# Generated by Django 2.2.5 on 2020-01-14 03:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='name')),
                ('gov_admin', models.CharField(max_length=255, verbose_name='gov admin (NSP)')),
                ('stat_admin', models.CharField(max_length=255, verbose_name='stat admin (NSP)')),
                ('counter', models.CharField(default='000001', max_length=8, verbose_name='counter of agreements')),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('chu', 'Chue'), ('osh', 'Osh'), ('bat', 'Batken'), ('jal', 'Jalalabad'), ('tal', 'Talas'), ('nar', 'Narin'), ('kol', 'Issikkol')], max_length=9, unique=True, verbose_name='name')),
                ('address', models.CharField(max_length=255, verbose_name='address')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, verbose_name='name')),
                ('code', models.CharField(max_length=14, unique=True, verbose_name='code')),
                ('counter', models.CharField(default=users.models.increment_territory_country, editable=False, max_length=4, unique=True, verbose_name='counter of Territory')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.District')),
            ],
            options={
                'verbose_name': 'Territory',
                'verbose_name_plural': 'Territories',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='must be in 123456789 format!', regex='^\\d{9}$')], verbose_name='number')),
                ('last_name', models.CharField(max_length=45, verbose_name='last name')),
                ('first_name', models.CharField(max_length=45, verbose_name='first name')),
                ('patronymic', models.CharField(blank=True, max_length=45, null=True, verbose_name='patronymic')),
                ('gender', models.CharField(choices=[('2', 'male'), ('1', 'female')], default='2', max_length=1, verbose_name='gender')),
                ('birth_day', models.DateField(verbose_name='birth day')),
                ('serial', models.CharField(choices=[('ID', 'ID'), ('AN', 'AN'), ('AC', 'AC')], default='ID', max_length=2, verbose_name='serial')),
                ('passport_num', models.CharField(max_length=7, verbose_name='number of passport')),
                ('address', models.CharField(max_length=255, verbose_name='address')),
                ('authority', models.CharField(max_length=10, verbose_name='Authority')),
                ('PIN', models.CharField(max_length=14, verbose_name='PIN')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/img', verbose_name='photo')),
                ('role', models.CharField(choices=[('con', 'Controller'), ('cor', 'Coordinator'), ('enum', 'Enumerator')], default=('enum', 'Enumerator'), max_length=50, verbose_name='role')),
                ('department', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15')], default=1, verbose_name='Census department')),
                ('sector', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15')], default=1, verbose_name='Coordinator sector')),
                ('plot', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15')], default=1, verbose_name='Enumerator plot')),
                ('agreement', models.CharField(max_length=6, verbose_name='agreement')),
                ('qrcode', models.ImageField(blank=True, null=True, upload_to='users/qr-codes', verbose_name='QR code')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('login', models.CharField(max_length=50, verbose_name='login')),
                ('password', models.CharField(max_length=16, verbose_name='password')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.District', verbose_name='district')),
                ('territory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Territory', verbose_name='territory')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Region', verbose_name='region'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('number', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='must be in 123456789 format!', regex='^\\d{9}$')], verbose_name='number')),
                ('is_staff', models.BooleanField(default=True, verbose_name='is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='super user')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.District', verbose_name='district')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Region', verbose_name='Region')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'abstract': False,
            },
        ),
    ]
